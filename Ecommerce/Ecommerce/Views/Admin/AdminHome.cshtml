@model IEnumerable<Ecommerce.EF.Order>
@using Ecommerce.EF;

@{
    ViewBag.Title = "AdminHome";
}

<h2>AdminHome</h2>

<table class="table">
    <tr align="center">
        <th>
            Products
        </th>
        <th>
            Products Name
        </th>
        <th>
            Customer Name
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            Total Amount
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th width="10%"></th>
    </tr>
    @foreach (var order in Model)
    {
        var db = new ProductEntities3();
        var product = db.Products.FirstOrDefault(p => p.id == order.ProductId);
        var customer = db.Users.FirstOrDefault(u => u.id == order.CustomerId);

        <tr>
            <td width="20%" align="center">
                @if (product.ProductImage != null && product.ProductImage.Length > 0)
                {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(product.ProductImage)" width="60%" height="60%" />
                }
                else
                {
                    <p>No image available</p>
                }
            </td>
            <td align="center" width="10%">
                @product.ProductName
            </td>
            <td align="center" width="10%">
                @customer.Name
            </td>
            <td align="center" width="10%">
                @Html.DisplayFor(model => order.Quantity)
            </td>
            <td align="center" width="10%">
                @(product.ProductPrice * order.Quantity) TK
            </td>
            <td width="9%">
                <div align="center">
                    @if (order.Status == "Processing")
                    {
                        <div class="alert alert-dark">
                            @Html.DisplayFor(model => order.Status)
                        </div>
                    }
                    else if (order.Status == "Approved")
                    {
                        <div class="alert alert-success">
                            @Html.DisplayFor(model => order.Status)
                        </div>
                    }
                    else if (order.Status == "Refused")
                    {
                        <div class="alert alert-danger">
                            @Html.DisplayFor(model => order.Status)
                        </div>
                    }
                </div>
            </td>
            <td>
                @if (order.Status == "Approved" && TempData["ApprovedErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ApprovedErrorMessage"]
                    </div>
                }
                @if (order.Status == "Refused" && TempData["RefusedErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["RefusedErrorMessage"]
                    </div>
                }
            </td>
            <td>
                @Html.ActionLink("Approve", "UpdateOrderStatus", "Admin", new { id = order.id, value = "Approved" }, new { @class = "btn btn-success" }) |
                @Html.ActionLink("Refuse", "UpdateOrderStatus", "Admin", new { id = order.id, value = "Refused" }, new { @class = "btn btn-success" })
            </td>
        </tr>
    }
</table>
