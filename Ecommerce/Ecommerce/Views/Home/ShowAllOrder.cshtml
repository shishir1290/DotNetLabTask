@model IEnumerable<Ecommerce.EF.Order>
@using Ecommerce.EF;

@{
    ViewBag.Title = "ShowAllOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ShowAllOrder</h2>

@{
    decimal totalAmount = 0; // Initialize the total amount
}

<table class="table">
    <tr>
        <th>
            Product Image
        </th>
        <th>
            Product Name
        </th>
        <th>
            Product Price
        </th>
        <th>
            Quantity
        </th>
        <th>
            Total Price
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>
    @foreach (var order in Model)
    {
        var db = new ProductEntities3();
        var product = db.Products.FirstOrDefault(p => p.id == order.ProductId);

        <tr>
            <td width="30%">
                @if (product.ProductImage != null && product.ProductImage.Length > 0)
                {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(product.ProductImage)" width="40%" height="40%" />
                }
                else
                {
                    <p>No image available</p>
                }
            </td>
            <td width="30%">
                @product.ProductName
            </td>
            <td width="15%">
                @product.ProductPrice TK
            </td>
            <td width="10%">
                @order.Quantity
            </td>

            <td width="20%">
                @(product.ProductPrice * order.Quantity) TK
            </td>


            <td width="20%">
                <div>
                    @if (order.Status == "Processing")
                    {
                        <div class="alert alert-dark">
                            @Html.DisplayFor(model => order.Status)
                        </div>
                    }
                    else if (order.Status == "Approved")
                    {
                        <div class="alert alert-success">
                            @Html.DisplayFor(model => order.Status)
                        </div>
                    }
                </div>
            </td>
        </tr>
    }
</table>


